// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pet.Game.Repository;

namespace Pet.Game.Repository.Migrations
{
    [DbContext(typeof(PetGameDataContext))]
    partial class PetGameDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pet.Game.Domain.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("HappinessStatus")
                        .HasColumnType("int");

                    b.Property<int>("HungrinessStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Pet.Game.Domain.Entities.PetType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("HappinessInterval")
                        .HasColumnType("int");

                    b.Property<int>("HungrinessInterval")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("PetTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6493657c-81cb-4a85-b71a-3ce8a7d2d312"),
                            Created = new DateTime(2020, 8, 25, 9, 40, 48, 186, DateTimeKind.Utc).AddTicks(51),
                            HappinessInterval = 1,
                            HungrinessInterval = 1,
                            LastModified = new DateTime(2020, 8, 25, 9, 40, 48, 186, DateTimeKind.Utc).AddTicks(1409),
                            Name = "Cats"
                        },
                        new
                        {
                            Id = new Guid("dc3eb6fc-a47c-41a2-8367-1de4834574a1"),
                            Created = new DateTime(2020, 8, 25, 9, 40, 48, 190, DateTimeKind.Utc).AddTicks(4408),
                            HappinessInterval = 1,
                            HungrinessInterval = 1,
                            LastModified = new DateTime(2020, 8, 25, 9, 40, 48, 190, DateTimeKind.Utc).AddTicks(4451),
                            Name = "Dogs"
                        },
                        new
                        {
                            Id = new Guid("5d676e75-af7d-4925-9991-cca8973afac7"),
                            Created = new DateTime(2020, 8, 25, 9, 40, 48, 190, DateTimeKind.Utc).AddTicks(5217),
                            HappinessInterval = 1,
                            HungrinessInterval = 1,
                            LastModified = new DateTime(2020, 8, 25, 9, 40, 48, 190, DateTimeKind.Utc).AddTicks(5223),
                            Name = "Birds"
                        },
                        new
                        {
                            Id = new Guid("d5426c61-0bb7-47cd-85a2-df74dca3ddc3"),
                            Created = new DateTime(2020, 8, 25, 9, 40, 48, 190, DateTimeKind.Utc).AddTicks(5295),
                            HappinessInterval = 1,
                            HungrinessInterval = 1,
                            LastModified = new DateTime(2020, 8, 25, 9, 40, 48, 190, DateTimeKind.Utc).AddTicks(5299),
                            Name = "Reptiles"
                        });
                });

            modelBuilder.Entity("Pet.Game.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pet.Game.Domain.Entities.Pet", b =>
                {
                    b.HasOne("Pet.Game.Domain.Entities.PetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Game.Domain.Entities.User", null)
                        .WithMany("Pets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
