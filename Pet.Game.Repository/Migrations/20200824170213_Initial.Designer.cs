// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pet.Game.Repository;

namespace Pet.Game.Repository.Migrations
{
    [DbContext(typeof(PetGameDataContext))]
    [Migration("20200824170213_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Pet.Game.Domain.Entities.Pet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("HappinessStatus")
                        .HasColumnType("int");

                    b.Property<int>("HungrinessStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<Guid>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("Pet.Game.Domain.Entities.PetType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<int>("HappinessInterval")
                        .HasColumnType("int");

                    b.Property<int>("HungrinessInterval")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("PetTypes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("93d124c5-7669-45ec-ba23-10d125ad8f1a"),
                            Created = new DateTime(2020, 8, 24, 17, 2, 13, 483, DateTimeKind.Utc).AddTicks(3631),
                            HappinessInterval = 1,
                            HungrinessInterval = 1,
                            LastModified = new DateTime(2020, 8, 24, 17, 2, 13, 483, DateTimeKind.Utc).AddTicks(4062),
                            Name = "Cats"
                        },
                        new
                        {
                            Id = new Guid("07fbf68d-0823-45a3-8e39-3b10dfa8984d"),
                            Created = new DateTime(2020, 8, 24, 17, 2, 13, 484, DateTimeKind.Utc).AddTicks(6170),
                            HappinessInterval = 1,
                            HungrinessInterval = 1,
                            LastModified = new DateTime(2020, 8, 24, 17, 2, 13, 484, DateTimeKind.Utc).AddTicks(6173),
                            Name = "Dogs"
                        },
                        new
                        {
                            Id = new Guid("630660ca-4af6-49bc-bbc5-b425475f4326"),
                            Created = new DateTime(2020, 8, 24, 17, 2, 13, 484, DateTimeKind.Utc).AddTicks(6442),
                            HappinessInterval = 1,
                            HungrinessInterval = 1,
                            LastModified = new DateTime(2020, 8, 24, 17, 2, 13, 484, DateTimeKind.Utc).AddTicks(6442),
                            Name = "Birds"
                        },
                        new
                        {
                            Id = new Guid("37804ed4-d0d3-4058-82fc-ae9c37b19dba"),
                            Created = new DateTime(2020, 8, 24, 17, 2, 13, 484, DateTimeKind.Utc).AddTicks(6466),
                            HappinessInterval = 1,
                            HungrinessInterval = 1,
                            LastModified = new DateTime(2020, 8, 24, 17, 2, 13, 484, DateTimeKind.Utc).AddTicks(6466),
                            Name = "Reptiles"
                        });
                });

            modelBuilder.Entity("Pet.Game.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Pet.Game.Domain.Entities.Pet", b =>
                {
                    b.HasOne("Pet.Game.Domain.Entities.PetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pet.Game.Domain.Entities.User", "User")
                        .WithMany("Pets")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
